// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution

// long long count=0;


{
  public:
  long long t[1001][1001], cnt=0;
  
  long long solve(int S[], int m, int n){
      
      if(n==0){
          cnt++;
          return 1;
          
      }
      
      if(m==0){
          return 0;
      }
      
      if(t[m][n]!=-1){
        return t[m][n];
      }
      
      if(S[m-1]<=n){
            t[m][n] = (solve(S,m,n-S[m-1]))+ solve(S,m-1,n);
        }
        
        else{
            t[m][n] = solve(S,m-1,n);
        }
        
        return t[m][n];
  }
    long long int count( int S[], int m, int n )
    {
        memset(t,-1,sizeof(t));
        long long  ans=0;
        ans = solve(S,m,n);
        return ans;
        
    }
};

// { Driver Code Starts.
int main()
{
    int t;
    cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		int arr[m];
		for(int i=0;i<m;i++)
		    cin>>arr[i];
	    Solution ob;
		cout<<ob.count(arr,m,n)<<endl;
	}
    
    
    return 0;
}  // } Driver Code Ends
