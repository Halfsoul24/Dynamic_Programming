// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:

    int t[51][51], row,col;
    
    int solve(int r, int c, vector<vector<int>> &M){
        
        if(c==col || r<0 || r>=row){
            return 0;
        }
        
        
        if(t[r][c]!=-1){
            return t[r][c];
        }
        
        int right_down = M[r][c] + solve(r+1,c+1, M);
        int right = M[r][c]+ solve(r, c+1, M);
        int right_up = M[r][c] + solve(r-1, c+1, M);
        
        return t[r][c] = max(right_down, max(right,right_up));
        
    }
    int maxGold(int n, int m, vector<vector<int>> M)
    {
         row=n;
        col = m;
        memset(t,-1,sizeof(t));
        int ans=0;
        
        for(int i=0; i<n; i++){
            ans = max(ans, solve(i,0,M));
        }
        return ans;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n, m;
        cin>>n>>m;
        vector<vector<int>> M(n, vector<int>(m, 0));
        for(int i = 0;i < n;i++){
            for(int j = 0;j < m;j++)
                cin>>M[i][j];
        }
        
        Solution ob;
        cout<<ob.maxGold(n, m, M)<<"\n";
    }
    return 0;
}  // } Driver Code Ends
