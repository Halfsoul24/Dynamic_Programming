// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
  public:
  
  int dp[101][101];
  
  int solve(string s, string t, int n, int m){
      
      if(n==0){
        return m;
      }
      if(m==0){
          return n;
      }
      
      if(dp[n][m]!=-1) return dp[n][m];
    //   return 1;
      
      if(s[n-1]==t[m-1]){
          return dp[n][m] = 0+ solve(s,t,n-1,m-1);
      }
      
      return dp[n][m] = 1 + min( solve(s,t,n-1,m), min(solve(s,t,n,m-1), solve(s,t,n-1,m-1)));
      
      
      
  }
    int editDistance(string s, string t) {
        
        memset(dp,-1,sizeof(dp));
        int n = s.size();
        int m = t.size();
        // return 1;
        return solve(s,t,n,m);
    }
};

// { Driver Code Starts.
int main() {
    int T;
    cin >> T;
    while (T--) {
        string s, t;
        cin >> s >> t;
        Solution ob;
        int ans = ob.editDistance(s, t);
        cout << ans << "\n";
    }
    return 0;
}
  // } Driver Code Ends
